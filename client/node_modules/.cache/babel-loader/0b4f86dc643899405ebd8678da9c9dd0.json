{"ast":null,"code":"var _jsxFileName = \"/Users/gwg./Desktop/june/crm/src/pages/ticket/Ticket.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react'; //\n\nimport { Container, Row, Col, Button } from 'react-bootstrap';\nimport { useParams, Redirect } from \"react-router-dom\";\nimport { PageBreadcrumb } from '../../components/breadcrumb/Breadcrumb';\nimport tickets from '../../assets/testticketdata.json';\nimport { Messages } from '../../components/messages/Messages';\nimport { UpdateTicket } from '../../components/updateTicket/UpdateTicket'; // const ticket = tickets[0];\n// const { id } = useParams();\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Ticket = () => {\n  _s();\n\n  const [update, setUpdate] = useState('');\n  const [ticket, setTicket] = useState('');\n  const {\n    id\n  } = useParams();\n  let ticketObj = tickets.filter(e => {\n    return e.id == id;\n  });\n  let x = ticketObj[0];\n  useEffect(() => {\n    setTicket(x);\n  }, []); // let mx = tickets.map()\n  // return <div> {tickets.map(t => { return <div> {t.id}{\" \"} </div> })} </div>\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\" id: \", id, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 13\n  }, this); // return <div> kk= {ticketObj[0].subject} id: {id} </div>\n  // // const [messages, setMessages] = useState([])\n  // // let newProfiles = profiles.filter((profile) => profile.id !== id);\n  // // let ticketObj = tickets.filter((ticket) => ticket.id !== id);\n  // // const ticket = tickets[id - 1];\n  // // let ticketObj = tickets.filter((e) => { return (e.id == id); })\n  // let ticketObj = tickets.filter((e) => { return (e.id == id); })\n  // // console.log(\"ticketObj \", ticketObj);\n  // console.log(\"ticketObj \")\n  // useEffect(() => {\n  //     setTicket(ticketObj);\n  // }, [id])\n  // const { subject, status, addedAt } = ticket;\n  // const handleChange = (e) => {\n  //     setUpdate(e.target.value);\n  // }\n  // const onSubmit = async (e) => {\n  //     e.preventDefault();\n  //     alert(update);\n  // }\n  // const updateProps = {\n  //     handleChange,\n  //     onSubmit,\n  //     update,\n  // }\n  // return (\n  //     <Container className=\"newTicket-container\" >\n  //         <Row>\n  //             <Col>\n  //                 <PageBreadcrumb pageName='Ticket' />\n  //                 {id}{\" \"} {tickets.length} {\" \"}\n  //                 {ticketObj[0]}\n  //             </Col>\n  //         </Row>\n  //         <Row className=\"mt-5 mb-2\">\n  //             <Col className=\"\" >\n  //                 <div className=\"subject\" ><b>Subject: </b> {subject} </div>\n  //                 <div className=\"date\" ><b>Added:</b> {addedAt} </div>\n  //                 <div className=\"status\" ><b>Status: </b> {status} </div>\n  //             </Col>\n  //             <Col className=\"text-right\" >\n  //                 <Button variant=\"outline-info\"> Close ticket</Button>\n  //             </Col>\n  //         </Row>\n  //         {ticket.history && <>\n  //             <Row>\n  //                 <Col className=\"\" >\n  //                     <Messages msgs={ticket.history} />\n  //                     {/* <Messages {...msgs} /> */}\n  //                     {/* <Messages msg={{ subject: 'sub', issueDate: 'date', description: 'des' }} /> */}\n  //                 </Col>\n  //             </Row>\n  //             <Row>\n  //                 <Col className=\"\" >\n  //                     <UpdateTicket {...updateProps} />\n  //                 </Col>\n  //             </Row>\n  //         </>}\n  //     </Container>\n  // )\n};\n\n_s(Ticket, \"4ifj3n8O8S4UwzzY7+9TOBBnUns=\", false, function () {\n  return [useParams];\n});\n\n_c = Ticket;\n\nvar _c;\n\n$RefreshReg$(_c, \"Ticket\");","map":{"version":3,"sources":["/Users/gwg./Desktop/june/crm/src/pages/ticket/Ticket.js"],"names":["React","useState","useEffect","Container","Row","Col","Button","useParams","Redirect","PageBreadcrumb","tickets","Messages","UpdateTicket","Ticket","update","setUpdate","ticket","setTicket","id","ticketObj","filter","e","x"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CACA;;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,MAA9B,QAA4C,iBAA5C;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,kBAApC;AAEA,SAASC,cAAT,QAA+B,wCAA/B;AACA,OAAOC,OAAP,MAAoB,kCAApB;AACA,SAASC,QAAT,QAAyB,oCAAzB;AACA,SAASC,YAAT,QAA6B,4CAA7B,C,CAEA;AACA;;;AAGA,OAAO,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACxB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACe,MAAD,EAASC,SAAT,IAAsBhB,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM;AAAEiB,IAAAA;AAAF,MAASX,SAAS,EAAxB;AACA,MAAIY,SAAS,GAAGT,OAAO,CAACU,MAAR,CAAgBC,CAAD,IAAO;AAAE,WAAQA,CAAC,CAACH,EAAF,IAAQA,EAAhB;AAAsB,GAA9C,CAAhB;AAEA,MAAII,CAAC,GAAGH,SAAS,CAAC,CAAD,CAAjB;AAEAjB,EAAAA,SAAS,CAAC,MAAM;AACZe,IAAAA,SAAS,CAACK,CAAD,CAAT;AACH,GAFQ,EAEN,EAFM,CAAT,CARwB,CAYxB;AAEA;;AACA,sBAAQ;AAAA,wBAAWJ,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA,UAAR,CAfwB,CAgBxB;AAGA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,CAtFM;;GAAML,M;UAGMN,S;;;KAHNM,M","sourcesContent":["import React, { useState, useEffect } from 'react'\n//\nimport { Container, Row, Col, Button } from 'react-bootstrap';\nimport { useParams, Redirect } from \"react-router-dom\";\n\nimport { PageBreadcrumb } from '../../components/breadcrumb/Breadcrumb';\nimport tickets from '../../assets/testticketdata.json'\nimport { Messages } from '../../components/messages/Messages';\nimport { UpdateTicket } from '../../components/updateTicket/UpdateTicket';\n\n// const ticket = tickets[0];\n// const { id } = useParams();\n\n\nexport const Ticket = () => {\n    const [update, setUpdate] = useState('');\n    const [ticket, setTicket] = useState('');\n    const { id } = useParams();\n    let ticketObj = tickets.filter((e) => { return (e.id == id); })\n\n    let x = ticketObj[0];\n\n    useEffect(() => {\n        setTicket(x)\n    }, [])\n\n    // let mx = tickets.map()\n\n    // return <div> {tickets.map(t => { return <div> {t.id}{\" \"} </div> })} </div>\n    return (<div> id: {id} </div>)\n    // return <div> kk= {ticketObj[0].subject} id: {id} </div>\n\n\n    // // const [messages, setMessages] = useState([])\n\n    // // let newProfiles = profiles.filter((profile) => profile.id !== id);\n    // // let ticketObj = tickets.filter((ticket) => ticket.id !== id);\n    // // const ticket = tickets[id - 1];\n\n    // // let ticketObj = tickets.filter((e) => { return (e.id == id); })\n    // let ticketObj = tickets.filter((e) => { return (e.id == id); })\n\n    // // console.log(\"ticketObj \", ticketObj);\n    // console.log(\"ticketObj \")\n\n    // useEffect(() => {\n    //     setTicket(ticketObj);\n    // }, [id])\n\n    // const { subject, status, addedAt } = ticket;\n\n    // const handleChange = (e) => {\n    //     setUpdate(e.target.value);\n    // }\n    // const onSubmit = async (e) => {\n    //     e.preventDefault();\n    //     alert(update);\n    // }\n\n    // const updateProps = {\n    //     handleChange,\n    //     onSubmit,\n    //     update,\n    // }\n\n    // return (\n    //     <Container className=\"newTicket-container\" >\n    //         <Row>\n    //             <Col>\n    //                 <PageBreadcrumb pageName='Ticket' />\n    //                 {id}{\" \"} {tickets.length} {\" \"}\n    //                 {ticketObj[0]}\n    //             </Col>\n    //         </Row>\n    //         <Row className=\"mt-5 mb-2\">\n    //             <Col className=\"\" >\n    //                 <div className=\"subject\" ><b>Subject: </b> {subject} </div>\n    //                 <div className=\"date\" ><b>Added:</b> {addedAt} </div>\n    //                 <div className=\"status\" ><b>Status: </b> {status} </div>\n    //             </Col>\n    //             <Col className=\"text-right\" >\n    //                 <Button variant=\"outline-info\"> Close ticket</Button>\n    //             </Col>\n    //         </Row>\n    //         {ticket.history && <>\n    //             <Row>\n    //                 <Col className=\"\" >\n    //                     <Messages msgs={ticket.history} />\n    //                     {/* <Messages {...msgs} /> */}\n    //                     {/* <Messages msg={{ subject: 'sub', issueDate: 'date', description: 'des' }} /> */}\n    //                 </Col>\n    //             </Row>\n    //             <Row>\n    //                 <Col className=\"\" >\n    //                     <UpdateTicket {...updateProps} />\n    //                 </Col>\n    //             </Row>\n    //         </>}\n    //     </Container>\n    // )\n}\n"]},"metadata":{},"sourceType":"module"}
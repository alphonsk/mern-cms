{"ast":null,"code":"var _jsxFileName = \"/Users/gwg./Desktop/june/crm/src/components/privateRoute/PrivateRoute.js\";\nimport React from 'react';\nimport { Route, Redirect } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst isAuth = false; // export const PrivateRoute = ({ children, ...rest }) => {\n//     // return <Route render={() => (isAuth ? children : <Redirect to=\"/\" />)} />;\n//     return (<Route\n//         {...rest}\n//         render={({ location }) =>\n//             isAuth ? (\n//                 children\n//             ) : (\n//                 <Redirect\n//                     to={{\n//                         pathname: \"/login\",\n//                         state: { from: location }\n//                     }}\n//                 />)\n//         })\n//     }\n// export const PrivateRoute = ({ children, ...rest }) => {\n//     return (\n//         <Route\n//             {...rest}\n//             render={({ location }) =>\n//                 isAuth ? (\n//                     children\n//                 ) : (\n//                     <Redirect\n//                         to={{\n//                             pathname: \"/login\",\n//                             state: { from: location }\n//                         }}\n//                     />\n//                 )\n//             }\n//         />\n//     );\n// }\n\nexport const PrivateRoute = ({\n  component,\n  ...options\n}) => {\n  const finalComponent = isAuth ? component : /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 49\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Route, { ...options,\n    component: finalComponent\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 12\n  }, this);\n};\n_c = PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["/Users/gwg./Desktop/june/crm/src/components/privateRoute/PrivateRoute.js"],"names":["React","Route","Redirect","isAuth","PrivateRoute","component","options","finalComponent"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;;AAGA,MAAMC,MAAM,GAAG,KAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAa,KAAGC;AAAhB,CAAD,KAA+B;AACvD,QAAMC,cAAc,GAAGJ,MAAM,GAAGE,SAAH,gBAAe,QAAC,QAAD;AAAU,IAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,UAA5C;AAEA,sBAAO,QAAC,KAAD,OAAWC,OAAX;AAAoB,IAAA,SAAS,EAAEC;AAA/B;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CAJM;KAAMH,Y","sourcesContent":["import React from 'react'\nimport { Route, Redirect } from \"react-router-dom\";\n\n\nconst isAuth = false;\n\n// export const PrivateRoute = ({ children, ...rest }) => {\n//     // return <Route render={() => (isAuth ? children : <Redirect to=\"/\" />)} />;\n//     return (<Route\n//         {...rest}\n//         render={({ location }) =>\n//             isAuth ? (\n//                 children\n//             ) : (\n//                 <Redirect\n//                     to={{\n//                         pathname: \"/login\",\n//                         state: { from: location }\n//                     }}\n//                 />)\n//         })\n//     }\n\n// export const PrivateRoute = ({ children, ...rest }) => {\n//     return (\n//         <Route\n//             {...rest}\n//             render={({ location }) =>\n//                 isAuth ? (\n//                     children\n//                 ) : (\n//                     <Redirect\n//                         to={{\n//                             pathname: \"/login\",\n//                             state: { from: location }\n//                         }}\n//                     />\n//                 )\n//             }\n//         />\n//     );\n// }\n\nexport const PrivateRoute = ({ component, ...options }) => {\n    const finalComponent = isAuth ? component : <Redirect to=\"/\" />;\n\n    return <Route {...options} component={finalComponent} />;\n};"]},"metadata":{},"sourceType":"module"}
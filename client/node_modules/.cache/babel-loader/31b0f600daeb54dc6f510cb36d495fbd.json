{"ast":null,"code":"var _jsxFileName = \"/Users/gwg./Desktop/june/crm/src/components/privateRoute/PrivateRoute.js\";\nimport React from 'react';\nimport { Route, Redirect } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst isAuth = false;\nexport const PrivateRoute = ({\n  children,\n  ...rest\n}) => {\n  // return (<Route {...rest} render={() => isAuth ? children : <Redirect to=\"/\" />} />);\n  // return (<Route {...rest} render={(children) => isAuth ? (children) : (<Redirect to=\"/\" />)} />);\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => isAuth ? /*#__PURE__*/_jsxDEV(Component, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 15\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 12\n  }, this);\n};\n_c = PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["/Users/gwg./Desktop/june/crm/src/components/privateRoute/PrivateRoute.js"],"names":["React","Route","Redirect","isAuth","PrivateRoute","children","rest","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;;AAGA,MAAMC,MAAM,GAAG,KAAf;AAEA,OAAO,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAAD,KAA2B;AACnD;AACA;AACA,sBAAO,QAAC,KAAD,OAAWA,IAAX;AAAiB,IAAA,MAAM,EAAEC,KAAK,IACjCJ,MAAM,gBACF,QAAC,SAAD,OAAeI;AAAf;AAAA;AAAA;AAAA;AAAA,YADE,gBAEA,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAHH;AAAA;AAAA;AAAA;AAAA,UAAP;AAKH,CARM;KAAMH,Y","sourcesContent":["import React from 'react'\nimport { Route, Redirect } from \"react-router-dom\";\n\n\nconst isAuth = false;\n\nexport const PrivateRoute = ({ children, ...rest }) => {\n    // return (<Route {...rest} render={() => isAuth ? children : <Redirect to=\"/\" />} />);\n    // return (<Route {...rest} render={(children) => isAuth ? (children) : (<Redirect to=\"/\" />)} />);\n    return <Route {...rest} render={props => (\n        isAuth ?\n            <Component {...props} />\n            : <Redirect to=\"/\" />\n    )} />\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/gwg./Desktop/june/crm/src/pages/Entry.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Jumbotron } from 'react-bootstrap';\nimport './entry.css'; // \n\nimport { LoginForm } from '../components/login/LoginForm';\nimport { PasswordReset } from '../components/passwordReset/PasswordReset';\nimport { NewTicketForm } from '../components/newTicket/NewTicketForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Entry = () => {\n  _s();\n\n  // const [email, setEmail] = useState('');\n  // const [password, setPassword] = useState(''); \n  const [formData, setFormData] = useState({\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const {\n    email,\n    password,\n    confirmPassword\n  } = formData;\n  const [loadForm, setLoadForm] = useState('login');\n  const [signUpForm, setSignUpForm] = useState(false); // const handleChange = (e) => {\n  //     switch (e.target.name) {\n  //         case 'email':\n  //             setEmail(e.target.value);\n  //             break;\n  //         case 'password':\n  //             setPassword(e.target.value);\n  //             break;\n  //         default:\n  //             break;\n  //     }\n  // }\n\n  const handleChange = e => {\n    setFormData({ ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (!email || !password) {\n      alert('please enter email');\n    }\n\n    if (signUpForm) {\n      if (!email || !password || !confirmPassword) {\n        alert('please enter email');\n      }\n    } // confirmPassword\n    // setEmail(email);\n    // setPassword(password);\n    // console.log(email, password);\n\n  };\n\n  const showForm = () => {\n    if (loadForm === 'login') setLoadForm('passwordReset');\n    if (loadForm === 'passwordReset') setLoadForm('login');\n  };\n\n  const loginFormProps = {\n    handleChange,\n    onSubmit,\n    email,\n    password\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"entry-page\",\n    children: /*#__PURE__*/_jsxDEV(Jumbotron, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-form\",\n        children: [loadForm === 'login' && /*#__PURE__*/_jsxDEV(LoginForm, { ...loginFormProps\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 48\n        }, this), loadForm === 'passwordReset' && /*#__PURE__*/_jsxDEV(PasswordReset, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 56\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          onClick: showForm,\n          className: \"center-btn\",\n          style: {\n            fontStyle: 'italic',\n            color: 'blue'\n          },\n          children: loadForm === 'passwordReset' ? 'Login' : 'Reset password'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n}; // export default Entry\n\n_s(Entry, \"hVsb+YkLRKwvC61fjxbcvYpvcFM=\");\n\n_c = Entry;\n\nvar _c;\n\n$RefreshReg$(_c, \"Entry\");","map":{"version":3,"sources":["/Users/gwg./Desktop/june/crm/src/pages/Entry.js"],"names":["React","useState","Jumbotron","LoginForm","PasswordReset","NewTicketForm","Entry","formData","setFormData","email","password","confirmPassword","loadForm","setLoadForm","signUpForm","setSignUpForm","handleChange","e","target","name","value","onSubmit","preventDefault","alert","showForm","loginFormProps","fontStyle","color"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,OAAO,aAAP,C,CACA;;AACA,SAASC,SAAT,QAA0B,+BAA1B;AACA,SAASC,aAAT,QAA8B,2CAA9B;AACA,SAASC,aAAT,QAA8B,uCAA9B;;AAGA,OAAO,MAAMC,KAAK,GAAG,MAAM;AAAA;;AACvB;AACA;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC;AAAEQ,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,QAAQ,EAAE,EAAvB;AAA2BC,IAAAA,eAAe,EAAE;AAA5C,GAAD,CAAxC;AACA,QAAM;AAAEF,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBC,IAAAA;AAAnB,MAAuCJ,QAA7C;AACA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,OAAD,CAAxC;AACA,QAAM,CAACa,UAAD,EAAaC,aAAb,IAA8Bd,QAAQ,CAAC,KAAD,CAA5C,CANuB,CASvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,QAAMe,YAAY,GAAIC,CAAD,IAAO;AACxBT,IAAAA,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAe,OAACU,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE;AAAzC,KAAD,CAAX;AACH,GAFD;;AAIA,QAAMC,QAAQ,GAAIJ,CAAD,IAAO;AACpBA,IAAAA,CAAC,CAACK,cAAF;;AACA,QAAI,CAACb,KAAD,IAAU,CAACC,QAAf,EAAyB;AACrBa,MAAAA,KAAK,CAAC,oBAAD,CAAL;AACH;;AAED,QAAIT,UAAJ,EAAgB;AACZ,UAAI,CAACL,KAAD,IAAU,CAACC,QAAX,IAAuB,CAACC,eAA5B,EAA6C;AACzCY,QAAAA,KAAK,CAAC,oBAAD,CAAL;AACH;AACJ,KAVmB,CAcpB;AACA;AACA;AACA;;AACH,GAlBD;;AAoBA,QAAMC,QAAQ,GAAG,MAAM;AACnB,QAAIZ,QAAQ,KAAK,OAAjB,EACIC,WAAW,CAAC,eAAD,CAAX;AACJ,QAAID,QAAQ,KAAK,eAAjB,EACIC,WAAW,CAAC,OAAD,CAAX;AACP,GALD;;AAQA,QAAMY,cAAc,GAAG;AACnBT,IAAAA,YADmB;AAEnBK,IAAAA,QAFmB;AAGnBZ,IAAAA,KAHmB;AAInBC,IAAAA;AAJmB,GAAvB;AAOA,sBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,2BACI,QAAC,SAAD;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,mBAEME,QAAQ,KAAK,OAAd,iBAA0B,QAAC,SAAD,OAAea;AAAf;AAAA;AAAA;AAAA;AAAA,gBAF/B,EAGMb,QAAQ,KAAK,eAAd,iBAAkC,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,gBAHvC,eAII;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI;AAAG,UAAA,OAAO,EAAEY,QAAZ;AAAsB,UAAA,SAAS,EAAC,YAAhC;AAA6C,UAAA,KAAK,EAAE;AAAEE,YAAAA,SAAS,EAAE,QAAb;AAAuBC,YAAAA,KAAK,EAAE;AAA9B,WAApD;AAAA,oBACMf,QAAQ,KAAK,eAAd,GAAiC,OAAjC,GAA2C;AADhD;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CA5EM,C,CA8EP;;GA9EaN,K;;KAAAA,K","sourcesContent":["import React, { useState } from 'react'\nimport { Jumbotron } from 'react-bootstrap'\nimport './entry.css'\n// \nimport { LoginForm } from '../components/login/LoginForm';\nimport { PasswordReset } from '../components/passwordReset/PasswordReset';\nimport { NewTicketForm } from '../components/newTicket/NewTicketForm';\n\n\nexport const Entry = () => {\n    // const [email, setEmail] = useState('');\n    // const [password, setPassword] = useState(''); \n    const [formData, setFormData] = useState({ email: '', password: '', confirmPassword: '' });\n    const { email, password, confirmPassword } = formData;\n    const [loadForm, setLoadForm] = useState('login');\n    const [signUpForm, setSignUpForm] = useState(false);\n\n\n    // const handleChange = (e) => {\n    //     switch (e.target.name) {\n    //         case 'email':\n    //             setEmail(e.target.value);\n    //             break;\n    //         case 'password':\n    //             setPassword(e.target.value);\n    //             break;\n    //         default:\n    //             break;\n    //     }\n    // }\n    const handleChange = (e) => {\n        setFormData({ ...formData, [e.target.name]: e.target.value });\n    }\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        if (!email || !password) {\n            alert('please enter email')\n        }\n\n        if (signUpForm) {\n            if (!email || !password || !confirmPassword) {\n                alert('please enter email');\n            }\n        }\n\n\n\n        // confirmPassword\n        // setEmail(email);\n        // setPassword(password);\n        // console.log(email, password);\n    }\n\n    const showForm = () => {\n        if (loadForm === 'login')\n            setLoadForm('passwordReset')\n        if (loadForm === 'passwordReset')\n            setLoadForm('login')\n    }\n\n\n    const loginFormProps = {\n        handleChange,\n        onSubmit,\n        email,\n        password\n    }\n\n    return (\n        <div className=\"entry-page\">\n            <Jumbotron >\n                <div className=\"login-form\">\n                    {/* <NewTicketForm {...loginFormProps} /> */}\n                    {(loadForm === 'login') && <LoginForm {...loginFormProps} />}\n                    {(loadForm === 'passwordReset') && <PasswordReset />}\n                    <hr />\n                    <p onClick={showForm} className='center-btn' style={{ fontStyle: 'italic', color: 'blue' }}>\n                        {(loadForm === 'passwordReset') ? 'Login' : 'Reset password'}\n                    </p>\n                </div>\n            </Jumbotron>\n\n        </div>\n    )\n}\n\n// export default Entry\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/gwg./Desktop/june/crm/src/components/privateRoute/PrivateRoute.js\";\nimport React from 'react';\nimport { Route, Redirect } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst isAuth = false; // export const PrivateRoute = ({ children, ...rest }) => {\n//     // return <Route render={() => (isAuth ? children : <Redirect to=\"/\" />)} />;\n//     return (<Route\n//         {...rest}\n//         render={({ location }) =>\n//             isAuth ? (\n//                 children\n//             ) : (\n//                 <Redirect\n//                     to={{\n//                         pathname: \"/login\",\n//                         state: { from: location }\n//                     }}\n//                 />)\n//         })\n//     }\n// export const PrivateRoute = ({ children, ...rest }) => {\n//     return (\n//         <Route\n//             {...rest}\n//             render={({ location }) =>\n//                 isAuth ? (\n//                     children\n//                 ) : (\n//                     <Redirect\n//                         to={{\n//                             pathname: \"/login\",\n//                             state: { from: location }\n//                         }}\n//                     />\n//                 )\n//             }\n//         />\n//     );\n// }\n// export const PrivateRoute = ({ component, ...options }) => {\n//     const finalComponent = isAuth ? component : <Redirect to=\"/\" />;\n//     return <Route {...options} component={finalComponent} />;\n// };\n\nexport const PrivateRoute = ({\n  children,\n  ...rest\n}) => {\n  console.log({\n    children\n  });\n  return /*#__PURE__*/_jsxDEV(Route, {\n    component: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 13\n  }, this);\n};\n_c = PrivateRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["/Users/gwg./Desktop/june/crm/src/components/privateRoute/PrivateRoute.js"],"names":["React","Route","Redirect","isAuth","PrivateRoute","children","rest","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;;AAGA,MAAMC,MAAM,GAAG,KAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;;AAEA,OAAO,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAAD,KAA2B;AACnDC,EAAAA,OAAO,CAACC,GAAR,CAAY;AAAEH,IAAAA;AAAF,GAAZ;AACA,sBAAQ,QAAC,KAAD;AAAO,IAAA,SAAS,EAAEA;AAAlB;AAAA;AAAA;AAAA;AAAA,UAAR;AACH,CAHM;KAAMD,Y","sourcesContent":["import React from 'react'\nimport { Route, Redirect } from \"react-router-dom\";\n\n\nconst isAuth = false;\n\n// export const PrivateRoute = ({ children, ...rest }) => {\n//     // return <Route render={() => (isAuth ? children : <Redirect to=\"/\" />)} />;\n//     return (<Route\n//         {...rest}\n//         render={({ location }) =>\n//             isAuth ? (\n//                 children\n//             ) : (\n//                 <Redirect\n//                     to={{\n//                         pathname: \"/login\",\n//                         state: { from: location }\n//                     }}\n//                 />)\n//         })\n//     }\n\n// export const PrivateRoute = ({ children, ...rest }) => {\n//     return (\n//         <Route\n//             {...rest}\n//             render={({ location }) =>\n//                 isAuth ? (\n//                     children\n//                 ) : (\n//                     <Redirect\n//                         to={{\n//                             pathname: \"/login\",\n//                             state: { from: location }\n//                         }}\n//                     />\n//                 )\n//             }\n//         />\n//     );\n// }\n\n// export const PrivateRoute = ({ component, ...options }) => {\n//     const finalComponent = isAuth ? component : <Redirect to=\"/\" />;\n\n//     return <Route {...options} component={finalComponent} />;\n// };\n\nexport const PrivateRoute = ({ children, ...rest }) => {\n    console.log({ children });\n    return (<Route component={children} />);\n}"]},"metadata":{},"sourceType":"module"}